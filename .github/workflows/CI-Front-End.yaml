name: Production Deploy

on:
  workflow_dispatch:

# on:
#   push:
#     branches:
#       - '*'
#       - '!main'

jobs:
  MFE-Deploy:
    if: ${{ ! failure() && ! cancelled() && github.ref_type == 'tag'}}
    #if: github.event_name == 'push'
    name: Build and Copy OPENSIGN
    runs-on: ubuntu-latest
    environment: 
      name: Production
      url: https://esign.effi.com.au/
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.12.2' #latest LTS

    - name: Configure AWS credentials from OIDC Provider
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_PRODUCTION_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: EFFI-GitHub-CI-CD-GitHub-Runner
        role-duration-seconds: 900 

    - name: Install Dependencies      
      run: npm i 

    - name: Build build:builder   
      run: npm run build:builder

    - name: Publish artifacts builder
      run: aws s3 cp ./dist/ s3://${{ vars.BUCKET }}/esign/ --recursive

    - name: Build build:viewer   
      run: npm run build:viewer

    - name: Publish artifacts viewer
      run: aws s3 cp ./dist/ s3://${{ vars.BUCKET }}/esign/ --recursive


  Invalidate:
    if: github.ref_type == 'tag'
    #if: github.event_name == 'push'
    name: CloudFront invalidation
    runs-on: ubuntu-latest
    needs: [MFE-Deploy]
    permissions:
      id-token: write
      contents: read
    steps:

    - name: Configure AWS credentials from OIDC Provider
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_PRODUCTION_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: EFFI-GitHub-CI-CD-GitHub-Runner
        role-duration-seconds: 900
    
    - name: Invalidate CloudFront Distribution Cache
      run: aws cloudfront create-invalidation --distribution-id ${{ vars.CF_ID_PRODUCTION }} --paths "/*"    
    
