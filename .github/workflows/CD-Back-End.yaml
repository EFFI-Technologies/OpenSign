name: Production-Backend-Deploy

on:
  workflow_dispatch:  # Allows manual trigger of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t open-sign-server:latest -f apps/OpenSignServer/Dockerfile .

      # Step 4: Log in to Amazon ECR (using AWS CLI credentials with AWS_REGION)
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: private
          skip-logout: false  # Ensures that login occurs correctly

      # Step 5: Tag the Docker image with the ECR repository URI
      - name: Tag Docker image
        run: |
          IMAGE_TAG=latest
          REPOSITORY_URI=020859241731.dkr.ecr.ap-southeast-2.amazonaws.com/opensign-service-api-saas-production
          docker tag open-sign-server:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG

      # Step 6: Push Docker image to Amazon ECR
      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=latest
          REPOSITORY_URI=020859241731.dkr.ecr.ap-southeast-2.amazonaws.com/opensign-service-api-saas-production
          docker push $REPOSITORY_URI:$IMAGE_TAG

      # Step 7: Retrieve latest ECS task definition and update with the new image
      - name: Retrieve latest ECS task definition
        run: |
          TASK_DEFINITION_FAMILY="opensign-service-api-saas-production"
          CLUSTER_NAME="ECS-Cluster-SAAS-Production"
          SERVICE_NAME="opensign-service-api-saas-production"
          IMAGE_URI="$REPOSITORY_URI:latest"

          # Fetch the latest revision of the task definition
          LATEST_TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_FAMILY --query "taskDefinition.revision" --output text)

          # Register a new revision of the task definition with the updated image
          NEW_TASK_DEFINITION=$(aws ecs register-task-definition \
            --family $TASK_DEFINITION_FAMILY \
            --container-definitions "[{\"name\":\"$SERVICE_NAME\",\"image\":\"$IMAGE_URI\",\"essential\":true}]" \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)

          echo "New Task Definition ARN: $NEW_TASK_DEFINITION"

      # Step 8: Update ECS service with the new task definition
      - name: Update ECS service with new task definition
        run: |
          CLUSTER_NAME="ECS-Cluster-SAAS-Production"
          SERVICE_NAME="opensign-service-api-saas-production"
          
          # Perform the ECS service update with the new task definition
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --task-definition $NEW_TASK_DEFINITION \
            --force-new-deployment \
            --desired-count 1
